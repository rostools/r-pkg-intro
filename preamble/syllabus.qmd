# Syllabus {#sec-syllabus}

{{< include ../includes/_wip.qmd >}}

Computational skills are essential in the modern research environment,
which increasingly involves large datasets and high performance
computing, along with an increasing demand that scientific studies be
reproducible and open. With these modern demands, researchers across
nearly all disciplines often need to create, use, and share software.
Most learning material that introduces programming or software
engineering tends to focus on developing applications with a commercial
purpose, while learning material targeted to researchers or data
scientists tends to focus on coding in relation to writing papers, doing
statistical analyses, or making figures. But there aren't many courses
or resources for researchers that focus on the in-between: Building
software to help explore problems and answer questions. This course and
educational resource covers the fundamentals of creating an R package as
part of your research cycle, whether you work alone or as part of a
team.

Our overall **learning outcome** is that at the end of this material,
learners will be able to:

> Explain how an R package is set up, organized, developed, and tested, 
> and create a simple R package that can be installed on their own 
> (or a colleague's) computer.

Our specific **learning objectives** are to:

-   Explain what an R package is, how it is structured, and how to set
    one up.
-   List and describe some best (or good enough) practices in package
    development and how to implement them.
-   Explain what a code style guide is, why it is important, and how to
    manually and automatically apply this style guide when writing code.
-   Describe why user-friendly and well-written documentation is crucial
    to building a usable package and create some simple documentation in
    a package setting.
-   Describe and apply effective workflows for developing an R package.
-   Develop a simple R package that is installable and that follows some
    core best practices.

<!-- TODO: Add graphic for overview? Something like: https://moderndive.com/preface.html#fig:pipeline-figure? -->

## Is this course for you?

We designed the course with the following characteristics of learners
in mind as the type of people who would be interested in and
want to take this course. We **don't** assume learners to have all or
even most of these characteristics. We only use these as a guide for
structuring and developing this material as well as to help manage your
expectations of the course.

-   Uses [R](https://cran.r-project.org/) for doing statistical
    analysis, general data analysis, data processing, data science, or
    for other research purposes.
-   Has no or limited formal training in programming or software
    development.
-   Has taken some formal R courses (like one of our previous
    [ones](https://r-cubed.rostools.org)) and feels fairly competent in
    writing R code.
-   Writes a lot of R scripts and some functions, often with a fair
    amount of repetitive code used throughout.
-   Writes code that others often use or at least would like (or hopes)
    others will use.
-   Has a research position that often ends up having more coding or
    programming related tasks, and would like to simplify or become more
    efficient in writing code so that less time is spent on it.
-   Has some familiarity with, but not much experience in, using version
    control systems like [Git](https://git-scm.com/) as well as hosting
    services like [GitHub](https://github.com/).
-   Wants to get into doing more research software
    development/engineering.
-   Wants to increase the reproducibility and usability of the code they produce

Many of the core concepts, skills, and knowledge covered in this course
are built on what was taught in the introductory, intermediate, and
advanced [r-cubed](https://r-cubed.rostools.org/) courses. However,
these courses are *not* pre-requisites. We also assume that learners are
able to:

-   Use function- and project-oriented workflows (as covered in the
    intermediate and advanced courses).
-   Managing package dependencies through the `DESCRIPTION` file (as
    covered in the intermediate and advanced courses).
-   Write functions to analyze tabular data using
    [R](https://cran.r-project.org/).
-   Familiar with using the
    [RStudio](https://posit.co/products/open-source/rstudio/) IDE.
-   Have a basic understanding of [Git](https://git-scm.com/) and
    [GitHub](https://github.com/), and have at least used them a few
    times with basic version control tasks.
-   Create reproducible reports using [R
    Markdown](https://rmarkdown.rstudio.com/) or
    [Quarto](https://quarto.org/).

<!-- TODO: List of packages used and that need to be installed here as well. -->

While we have these assumptions to help focus the content of the course,
if you have an interest in learning how to develop R packages but don't
fit any of the above assumptions, *you are still welcome to attend the
course*! We welcome everyone, that is until the course capacity is
reached.

