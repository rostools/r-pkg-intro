# Syllabus {#sec-syllabus}

{{< include ../includes/_wip.qmd >}}

Computational skills are essential in the modern research environment,
which increasingly involves large datasets and high performance
computing, along with increasing demand that scientific studies be
reproducible and open. With these modern demands, researchers across
nearly all disciplines often need to create, use, and share software.
Most introductions to programming or software engineering focus on
developing commercial applications, however, researchers needs are
largely related to exploring problems and answering questions. This book
covers the fundamentals of creating software as part of your research
cycle whether you work alone or as part of a team.

Our overall **learning outcome** is that by the end of the course,
participants will be able to:

Our specific **learning objectives** are to:

-   Item 1

## Introduction for learners

The primary aim of this book is to teach you the tools, skills, and
knowledge necessary to making research software that is open,
reproducible, and sustainable. For researchers and data scientists who
can write functions to create programs that are hundreds of lines long
and who want to be more productive and have more confidence in their
results, this book provides a pragmatic, tools-based introduction to
research software engineering. For researchers whose tasks include
building software packages, this book will help train you to be a
[research software engineer](https://researchsoftware.org/). Unlike
material aimed at computer scientists and professional software
developers, this book uses data analysis as the motivating example and
assumes that the learner's ultimate goal is to answer questions rather
than develop commercial software products.

Science is a process that depends on scientific results that are
accurate, precise, replicable, and reproducible. Developing software
packages for research purposes is an important way in our modern
research environment to ensure that the analyses that produce our
results are exactly that: accurate, precise, replicable, and
reproducible. Given this, the main learning goal of this book is that
you learn to *develop an R package*. By the end of the book, you will
have the skills and knowledge necessary to: develop well-built,
well-documented, and re-usable R-packages; work effectively as part of a
team or as a contributor; and optionally prepare your package to be
submitted to CRAN.

To support your learning experience, we have developed the following
specific **learning objectives** that you will master from this book:

-   Explain what an R package is, how it is structured, and how to set
    one up.
-   List and describe some best (or good enough) practices in package
    development and how to implement them.
-   Explain what a code style guide is, why it is important, and how to
    write code that adheres to the style guide.
-   Describe why user-friendly and well-written documentation is crucial
    to building a usable package and some steps to achieve this type of
    documentation.
-   Describe what CRAN is, what policies and quality-control steps it
    has for packages, and how to prepare a package for submission to
    CRAN so that it passes these checks and requirements.

Aside from the technical aspects of building an R package, the book will
also cover topics that enhance and improve the process of package
development. These learning objectives are to:

-   Describe and apply effective workflows and project management tools
    that coordinate the development of software, particularly for
    software that is complex or when working in a team.
-   Outline (and optionally practice) how to work productively in a
    small team that is inclusive and welcoming.
-   Explain why it is beneficial to involve community contributors when
    designing software and documentation.

<!-- TODO: Add graphic for overview? Something likehttps://moderndive.com/preface.html#fig:pipeline-figure? -->

## Is this course for you?

### Who we assume potential learners are

We designed the course with the following [learner personas]() in mind
as the type of people who would be interested in and want to take this
course.

Amira

:   Completed a master's in library science five years ago and has since
    worked for a small aid organization. She did some statistics during
    her degree, and has learned some R and Python by doing data science
    courses online, but has no formal training in programming. Amira
    would like to tidy up the scripts, data sets, and reports she has
    created in order to share them with her colleagues. These lessons
    will show her how to do this and what "done" looks like.

Jun

:   Completed an [Insight Data
    Science](https://insightfellows.com/data-science) fellowship last
    year after doing a PhD in Geology and now works for a company that
    does forensic audits. He uses a variety of machine learning and
    visualization packages, and would now like to turn some of his own
    work into an open source project. This book will show him how such a
    project should be organized and how to encourage people to
    contribute to it.

Sami

:   Became a competent programmer during a bachelor's degree in applied
    math and was then hired by the university's research computing
    center. The kinds of applications they are being asked to support
    have shifted from fluid dynamics to data analysis; this guide will
    teach them how to build and run re-usable data analysis pipelines so
    that they can pass those skills on to their users.

Ali

:   Learned about statistics and programming during high school and
    decided to enroll into an undergraduate Data Science program. She
    hopes to have a career working on open source projects and doing
    research software engineering for a research institution. One of her
    courses uses this book so she will be working through the material
    during the course and will use it as reference afterwards.

Luis

:   Has been doing a graduate degree that involves largely doing
    quantitative research. While doing his projects, he realizes that
    learning and creating R packages would greatly help his work as well
    as others in the group. However, he has not had any formal courses
    in computer programming. He enrolled in a course at the university
    that uses this book so will work through this book.

### Assumed skills and knowledge

Many of the core concepts, skills, and knowledge covered in this course
are built on what was taught in [r-cubed]() courses. However, these
courses are *not* pre-requisites.

-   Intro
-   Intermediate
-   Advanced

We also assume that learners are able to:

-   Use function- and project-oriented workflows (as covered in the
    intermediate and advanced courses above).
-   Managing package dependencies through the `DESCRIPTION` file (as
    covered in the intermediate and advanced courses above).
-   Write functions to analyze tabular data using
    [R](https://cran.r-project.org/).
-   Familiar with using the
    [RStudio](https://posit.co/products/open-source/rstudio/) IDE.
-   Have a basic understanding of [Git](https://git-scm.com/) and
    [GitHub](https://github.com/), and have at least used them a few
    times with basic version control tasks.
-   Create reproducible reports using [R
    Markdown](https://rmarkdown.rstudio.com/) or
    [Quarto](https://quarto.org/).

<!-- TODO: List of packages used and that need to be installed here as well. -->

## Is this course for you? {#sec-is-it-for-you}

To help manage expectations and develop the material for this course, we
make a few assumptions about *who you are* as a participant in the
course:

-   Assumptions

While we have these assumptions to help focus the content of the course,
if you have an interest in learning R but don't fit any of the above
assumptions, *you are still welcome to attend the course*! We welcome
everyone, that is until the course capacity is reached.

In addition to the assumptions, we also have a fairly focused scope for
teaching and expectations for learning. So this may also help you decide
if this course is for you.

-   List of what we will teach and won't teach
