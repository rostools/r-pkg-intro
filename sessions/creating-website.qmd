# Exposing your package to the world with a website

{{< include ../includes/_wip.qmd >}}

```{r setup}
#| include: false
```

## Learning objectives

The overall **learning outcome** for this session is to:

1.  Explain the main benefits to creating a website for your package,
    describe items that are useful to communicate to (potential) users,
    and use the `{pkgdown}` package to auto-generate a website for you
    whenever changes are made.

Specific **objectives** are to:

1.  Identify and list some benefits of using a website to communicate
    details about your package.
2.  Describe the differences between a locally created website and a
    website hosted on a server.
3.  Use `{pkgdown}` to generate HTML files structured as a website based
    on your vignettes and function documentation.
4.  Create an aesthetically pleasing (to you) website using the themes
    in `{pkgdown}`.
5.  Use the `{lifecycle}` package to communicate the developmental
    maturity of your package and of individual functions, in a way that
    also gets included on the website.
6.  Explain the benefit to having your website automatically generated
    whenever changes are made and use `{usethis}` and GitHub Action
    workflows to setup up this auto-generation.

## TODO: Section

-   `pkgdown`

    -   Text: What is `pkgdown`?
    -   Exercise: Visit the [`ggplot2` `pkgdown`
        page](https://ggplot2.tidyverse.org/) and identify 3 benefits of
        having such a page
    -   Text: Benefits of having documentation be code-generated
    -   Text: Benefits of having a public website with the package docs
    -   Text: Talk about the build process bouth locally and through
        GitHub pages
    -   Exercise: Build and serve the website locally

-   Website Customization

    -   Text: Why does making a package website standout is useful
    -   Text: Where do the `pkgdown` themes come from?
    -   Exercise: Change the theme of the website to one different from
        the default
    -   Text: Organizing beyond themes
        -   Text: Transition to talking about sections, tutorials and
            vignettes
        -   Exercise: Organize the reference page so that related
            functions are grouped together

-   Functions' Lifecycle

    -   Text: Explain what is the lifecycle of a function
    -   Text: Explain the different lifecycle stages
        -   Text: {experimental --\> stable --\> either deprecated or
            superseded}
    -   Exercise: Search for a superseded function in a tidyverse
        package
        -   We can specify which package later
    -   Text: Walkthrough of the process of deprecating a function

::: callout-note
## Reading task: \~4 minutes

TODO: Reading text
:::

## Exercise: TODO: Add title

> Time: \## minutes.

```{r solution-LABEL}
#| eval: false
#| code-fold: true
#| code-summary: "**Click for the solution**. Only click if you are struggling or are out of time."
```

## Summary

-   TODO: List of summary items